PartialFindResult[SongInListForApiContract] {
items (Array[SongInListForApiContract], optional),
term (string, optional),
totalCount (integer, optional)
}
SongInListForApiContract {
notes (string, optional),
order (integer, optional),
song (SongForApiContract, optional)
}
SongForApiContract {
additionalNames (string, optional),
albums (Array[AlbumContract], optional),
artists (Array[ArtistForSongContract], optional),
artistString (string, optional),
createDate (string, optional),
defaultName (string, optional),
defaultNameLanguage (string, optional) = ['Unspecified', 'Japanese', 'Romaji', 'English'],
deleted (boolean, optional),
favoritedTimes (integer, optional),
id (integer, optional),
lengthSeconds (integer, optional),
lyrics (Array[LyricsForSongContract], optional),
mainPicture (EntryThumbForApiContract, optional),
mergedTo (integer, optional),
name (string, optional),
names (Array[LocalizedStringContract], optional),
originalVersionId (integer, optional),
publishDate (string, optional),
pvs (Array[PVContract], optional),
pvServices (string, optional) = ['Nothing', 'NicoNicoDouga', 'Youtube', 'SoundCloud', 'Vimeo', 'Piapro', 'Bilibili', 'File', 'LocalFile', 'Creofuga', 'Bandcamp'],
ratingScore (integer, optional),
releaseEvent (ReleaseEventForApiContract, optional),
songType (string, optional) = ['Unspecified', 'Original', 'Remaster', 'Remix', 'Cover', 'Arrangement', 'Instrumental', 'Mashup', 'MusicPV', 'DramaPV', 'Live', 'Illustration', 'Other'],
status (string, optional) = ['Draft', 'Finished', 'Approved', 'Locked'],
tags (Array[TagUsageForApiContract], optional),
thumbUrl (string, optional),
version (integer, optional),
webLinks (Array[WebLinkForApiContract], optional)
}
AlbumContract {
additionalNames (string, optional),
artistString (string, optional),
coverPictureMime (string, optional),
createDate (string, optional),
deleted (boolean, optional),
discType (string, optional) = ['Unknown', 'Album', 'Single', 'EP', 'SplitAlbum', 'Compilation', 'Video', 'Artbook', 'Game', 'Fanmade', 'Instrumental', 'Other'],
id (integer, optional),
name (string, optional),
ratingAverage (number, optional),
ratingCount (integer, optional),
releaseDate (OptionalDateTimeContract, optional),
releaseEvent (ReleaseEventForApiContract, optional),
status (string, optional) = ['Draft', 'Finished', 'Approved', 'Locked'],
version (integer, optional)
}
ArtistForSongContract {
artist (ArtistContract, optional),
categories (string, optional) = ['Nothing', 'Vocalist', 'Producer', 'Animator', 'Label', 'Circle', 'Other', 'Band', 'Illustrator', 'Subject'],
effectiveRoles (string, optional) = ['Default', 'Animator', 'Arranger', 'Composer', 'Distributor', 'Illustrator', 'Instrumentalist', 'Lyricist', 'Mastering', 'Publisher', 'Vocalist', 'VoiceManipulator', 'Other', 'Mixer', 'Chorus', 'Encoder', 'VocalDataProvider'],
id (integer, optional),
isCustomName (boolean, optional),
isSupport (boolean, optional),
name (string, optional),
roles (string, optional) = ['Default', 'Animator', 'Arranger', 'Composer', 'Distributor', 'Illustrator', 'Instrumentalist', 'Lyricist', 'Mastering', 'Publisher', 'Vocalist', 'VoiceManipulator', 'Other', 'Mixer', 'Chorus', 'Encoder', 'VocalDataProvider']
}
LyricsForSongContract {
cultureCode (string, optional),
id (integer, optional),
source (string, optional),
translationType (string, optional) = ['Original', 'Romanized', 'Translation'],
url (string, optional),
value (string, optional)
}
EntryThumbForApiContract {
mime (string, optional),
urlOriginal (string, optional),
urlSmallThumb (string, optional),
urlThumb (string, optional),
urlTinyThumb (string, optional)
}
LocalizedStringContract {
language (string, optional) = ['Unspecified', 'Japanese', 'Romaji', 'English'],
value (string, optional)
}
PVContract {
author (string, optional),
createdBy (integer, optional),
disabled (boolean, optional),
extendedMetadata (PVExtendedMetadata, optional),
id (integer, optional),
length (integer, optional),
name (string, optional),
publishDate (string, optional),
pvId (string, optional),
service (string, optional) = ['NicoNicoDouga', 'Youtube', 'SoundCloud', 'Vimeo', 'Piapro', 'Bilibili', 'File', 'LocalFile', 'Creofuga', 'Bandcamp'],
pvType (string, optional) = ['Original', 'Reprint', 'Other'],
thumbUrl (string, optional),
url (string, optional)
}
ReleaseEventForApiContract {
additionalNames (string, optional),
artists (Array[ArtistForEventContract], optional),
category (string, optional) = ['Unspecified', 'AlbumRelease', 'Anniversary', 'Club', 'Concert', 'Contest', 'Convention', 'Other'],
date (string, optional),
description (string, optional),
endDate (string, optional),
id (integer, optional),
mainPicture (EntryThumbForApiContract, optional),
name (string, optional),
names (Array[LocalizedStringContract], optional),
series (ReleaseEventSeriesContract, optional),
seriesId (integer, optional),
seriesNumber (integer, optional),
seriesSuffix (string, optional),
songList (SongListBaseContract, optional),
status (string, optional) = ['Draft', 'Finished', 'Approved', 'Locked'],
tags (Array[TagUsageForApiContract], optional),
urlSlug (string, optional),
venue (VenueForApiContract, optional),
venueName (string, optional),
version (integer, optional),
webLinks (Array[WebLinkForApiContract], optional)
}
TagUsageForApiContract {
count (integer, optional),
tag (TagBaseContract, optional)
}
WebLinkForApiContract {
category (string, optional) = ['Official', 'Commercial', 'Reference', 'Other'],
description (string, optional),
descriptionOrUrl (string, optional),
id (integer, optional),
url (string, optional)
}
OptionalDateTimeContract {
day (integer, optional),
formatted (string, optional),
isEmpty (boolean, optional),
month (integer, optional),
year (integer, optional)
}
ArtistContract {
additionalNames (string, optional),
artistType (string, optional) = ['Unknown', 'Circle', 'Label', 'Producer', 'Animator', 'Illustrator', 'Lyricist', 'Vocaloid', 'UTAU', 'CeVIO', 'OtherVoiceSynthesizer', 'OtherVocalist', 'OtherGroup', 'OtherIndividual', 'Utaite', 'Band', 'Vocalist', 'Character'],
deleted (boolean, optional),
id (integer, optional),
name (string, optional),
pictureMime (string, optional),
releaseDate (string, optional),
status (string, optional) = ['Draft', 'Finished', 'Approved', 'Locked'],
version (integer, optional)
}
PVExtendedMetadata {
json (string, optional)
}
ArtistForEventContract {
artist (ArtistContract, optional),
effectiveRoles (string, optional) = ['Default', 'Dancer', 'DJ', 'Instrumentalist', 'Organizer', 'Promoter', 'VJ', 'Vocalist', 'VoiceManipulator', 'OtherPerformer', 'Other'],
id (integer, optional),
name (string, optional),
roles (string, optional) = ['Default', 'Dancer', 'DJ', 'Instrumentalist', 'Organizer', 'Promoter', 'VJ', 'Vocalist', 'VoiceManipulator', 'OtherPerformer', 'Other']
}
ReleaseEventSeriesContract {
additionalNames (string, optional),
category (string, optional) = ['Unspecified', 'AlbumRelease', 'Anniversary', 'Club', 'Concert', 'Contest', 'Convention', 'Other'],
deleted (boolean, optional),
description (string, optional),
id (integer, optional),
name (string, optional),
pictureMime (string, optional),
status (string, optional) = ['Draft', 'Finished', 'Approved', 'Locked'],
urlSlug (string, optional),
version (integer, optional),
webLinks (Array[WebLinkContract], optional)
}
SongListBaseContract {
featuredCategory (string, optional) = ['Nothing', 'Concerts', 'VocaloidRanking', 'Pools', 'Other'],
id (integer, optional),
name (string, optional)
}
VenueForApiContract {
additionalNames (string, optional),
address (string, optional),
addressCountryCode (string, optional),
coordinates (OptionalGeoPointContract, optional),
description (string, optional),
events (Array[ReleaseEventContract], optional),
id (integer, optional),
name (string, optional),
names (Array[LocalizedStringContract], optional),
status (string, optional) = ['Draft', 'Finished', 'Approved', 'Locked'],
version (integer, optional),
webLinks (Array[WebLinkForApiContract], optional)
}
TagBaseContract {
additionalNames (string, optional),
categoryName (string, optional),
id (integer, optional),
name (string, optional),
urlSlug (string, optional)
}
WebLinkContract {
category (string, optional) = ['Official', 'Commercial', 'Reference', 'Other'],
description (string, optional),
descriptionOrUrl (string, optional),
id (integer, optional),
url (string, optional)
}
OptionalGeoPointContract {
formatted (string, optional),
hasValue (boolean, optional),
latitude (number, optional),
longitude (number, optional)
}
ReleaseEventContract {
additionalNames (string, optional),
category (string, optional) = ['Unspecified', 'AlbumRelease', 'Anniversary', 'Club', 'Concert', 'Contest', 'Convention', 'Other'],
customName (boolean, optional),
date (string, optional),
deleted (boolean, optional),
description (string, optional),
endDate (string, optional),
hasVenueOrVenueName (boolean, optional),
id (integer, optional),
inheritedCategory (string, optional) = ['Unspecified', 'AlbumRelease', 'Anniversary', 'Club', 'Concert', 'Contest', 'Convention', 'Other'],
name (string, optional),
pictureMime (string, optional),
series (ReleaseEventSeriesContract, optional),
songList (SongListBaseContract, optional),
status (string, optional) = ['Draft', 'Finished', 'Approved', 'Locked'],
urlSlug (string, optional),
venue (VenueContract, optional),
venueName (string, optional),
version (integer, optional)
}
VenueContract {
additionalNames (string, optional),
address (string, optional),
addressCountryCode (string, optional),
coordinates (OptionalGeoPointContract, optional),
deleted (boolean, optional),
description (string, optional),
id (integer, optional),
name (string, optional),
status (string, optional) = ['Draft', 'Finished', 'Approved', 'Locked'],
version (integer, optional),
webLinks (Array[WebLinkContract], optional)
}